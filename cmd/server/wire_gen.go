// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/HankLin216/connect-go-boilerplate/internal/biz"
	"github.com/HankLin216/connect-go-boilerplate/internal/conf"
	"github.com/HankLin216/connect-go-boilerplate/internal/data"
	"github.com/HankLin216/connect-go-boilerplate/internal/mux"
	"github.com/HankLin216/connect-go-boilerplate/internal/service"
	"net/http"
)

// Injectors from wire.go:

// wireApp init application.
func wireApp(server *conf.Server, bootstrap *conf.Bootstrap) (*http.Server, func(), error) {
	dataData, cleanup, err := data.NewData(bootstrap)
	if err != nil {
		return nil, nil, err
	}
	greeterRepo := data.NewGreeterRepo(dataData)
	greeterUsecase := biz.NewGreeterUsecase(greeterRepo)
	greeterService := service.NewGreeterService(greeterUsecase)
	serveMux := mux.New(greeterService)
	httpServer := newApp(serveMux, bootstrap)
	return httpServer, func() {
		cleanup()
	}, nil
}
